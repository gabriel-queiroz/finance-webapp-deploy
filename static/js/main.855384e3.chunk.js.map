{"version":3,"sources":["config/reactotron.js","components/Loading/styles.js","components/Loading/index.js","routes/LoadingRoute.js","routes/NestedRoute.js","routes/PrivateRoute.js","routes/index.js","styles/global.js","store/ducks/index.js","services/http.js","store/sagas/transactionSaga.js","store/sagas/accountSaga.js","store/sagas/categorySaga.js","store/sagas/index.js","store/index.js","App.js","index.js","store/ducks/transactionsReducer.js","store/ducks/categoriesReducer.js","store/ducks/accountsReducer.js","store/ducks/modalTransactionReducer.js"],"names":["reactotron","Reactotron","configure","use","sagaPlugin","reactotronRedux","connect","console","tron","log","Container","styled","div","_templateObject","props","isDashboard","Title","h1","_templateObject2","Loading","_ref","react_default","a","createElement","ClipLoader_default","sizeUnit","color","size","loading","error","retry","pastDelay","type","onClick","components_Loading","LoadingDashboard","_ref2","NestedRoute","react_router","exact","path","render","component","children","PrivateRoute","Component","rest","Object","objectWithoutProperties","assign","Login","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","Dashboard","Home","Transactions","Accounts","Routes","react_router_dom","routes_NestedRoute","routes_PrivateRoute","to","globalStyle","createGlobalStyle","global_templateObject","reducers","combineReducers","transactionsReducer","modalTransactionReducer","categoriesReducer","accountsReducer","http","axios","create","baseURL","timeout","getTransactions","postTransaction","data","regenerator_default","wrap","_context","prev","next","call","get","sent","put","TransactionsCreators","getSuccessTransactions","t0","getFailureTransaction","stop","_marked","action","_context2","post","payload","ModalTrasactionCreators","closeModal","postSuccessTransaction","toast","success","postFailureTransaction","_marked2","getAccounts","Creators","getSuccessAccounts","getFailureAccounts","accountSaga_marked","getCategories","getSuccessCategories","categorySaga_marked","rootSaga","takeLatest","TransactionsType","GET_TRANSACTIONS","POST_TRANSACTION","CategoriesType","GET_CATEGORIES","categorySaga","AccountsType","GET_ACCOUNTS","accountSaga","sagas_marked","middlewares","sagaMiddleware","createSagaMiddleware","sagaMonitor","push","composer","compose","applyMiddleware","apply","store","createStore","run","sagas","App","es","global","routes","ReactDOM","src_App","document","getElementById","INITIAL_STATE","errorPostTransaction","loadingTransaction","Types","GET_SUCCESS_TRANSACTIONS","GET_FAILURE_TRANSACTIONS","POST_FAILURE_TRANSACTION","POST_SUCCESS_TRANSACTION","transactions","errorMessage","transaction","POST_TRANSACTION_FAILURE","state","arguments","length","undefined","_Users_gabrielqueiroz_Desenvolvimento_front_reactProjects2_finance_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","GET_SUCCESS_GET_CATEGORIES","GET_FAILURE_GET_CATEGORIES","CATEGORIES","getFailureCategories","CategoriesReducer","GET_SUCCESS_GET_ACCOUNTS","GET_FAILURE_GET_ACCOUNTS","accounts","AccountsReducer","visable","transactionType","ModalTransactionTypes","RECIPE","EXPENSE","openModal"],"mappings":"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","file":"static/js/main.855384e3.chunk.js","sourcesContent":["import Reactotron from 'reactotron-react-js';\nimport { reactotronRedux } from 'reactotron-redux';\nimport sagaPlugin from 'reactotron-redux-saga';\n\nconst reactotron = Reactotron.configure()\n  .use(sagaPlugin())\n  .use(reactotronRedux())\n  .connect();\n\nconsole.tron = reactotron;\n\nconsole.log('entrou');\n\nexport default reactotron;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: ${props => (props.isDashboard ? '100%' : '100vh')};\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => (props.isDashboard ? '#ffffff' : '#1890ff')};\n  flex-direction: column;\n`;\n\nexport const Title = styled.h1`\n  color: ${props => (props.isDashboard ? '#1890ff' : '#ffffff')};\n  font-size: 35px;\n  font-weight: bold;\n`;\n","import React from 'react';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { Container, Title } from './styles';\n\nconst Loading = ({ isDashboard }) => (\n  <Container isDashboard={isDashboard}>\n    <ClipLoader sizeUnit=\"px\" color={isDashboard ? '#1890ff' : '#ffffff'} size={50} loading />\n    {!isDashboard && <Title>Carregando...</Title>}\n  </Container>\n);\n\nexport default Loading;\n","import React from 'react';\nimport LoadingComponent from '../components/Loading';\n\nexport const Loading = ({ error, retry, pastDelay }) => {\n  if (error) {\n    return (\n      <div>\n        Error!\n        <button type=\"button\" onClick={retry}>\n          Retry\n        </button>\n      </div>\n    );\n  }\n  if (pastDelay) {\n    return <LoadingComponent />;\n  }\n  return null;\n};\n\nexport const LoadingDashboard = ({ error, retry, pastDelay }) => {\n  if (error) {\n    return (\n      <div>\n        Error!\n        <button type=\"button\" onClick={retry}>\n          Retry\n        </button>\n      </div>\n    );\n  }\n  if (pastDelay) {\n    return <LoadingComponent isDashboard />;\n  }\n  return null;\n};\n","import { Route } from 'react-router-dom';\nimport React from 'react';\n\nconst NestedRoute = props => (\n  <Route\n    exact={props.exact}\n    path={props.path}\n    render={component => <props.component {...component}>{props.children}</props.component>}\n  />\n);\n\nexport default NestedRoute;\n","import { Route, Redirect } from 'react-router-dom';\nimport React from 'react';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (true === true ? <Component {...props} /> : <Redirect to=\"/login\" />)}\n  />\n);\n\nexport default PrivateRoute;\n","import {\n  BrowserRouter, Switch, Route, Redirect,\n} from 'react-router-dom';\nimport React from 'react';\nimport Loadable from 'react-loadable';\nimport {Loading, LoadingDashboard} from './LoadingRoute';\nimport NestedRoute from './NestedRoute';\nimport PrivateRoute from './PrivateRoute';\n\n\nconst Login = Loadable({\n  loader: () => import('../pages/Login'),\n  loading: Loading,\n});\n\nconst Dashboard = Loadable({\n  loader: () => import('../components/Drawer'),\n  loading: Loading,\n});\n\nconst Home = Loadable({\n  loader: () => import('../pages/Home'),\n  loading: LoadingDashboard,\n});\n\nconst Transactions = Loadable({\n  loader: () => import('../pages/Transactions'),\n  loading: LoadingDashboard,\n});\n\nconst Accounts = Loadable({\n  loader: () => import('../pages/Accounts'),\n  loading: LoadingDashboard,\n});\n\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/login\" exact component={Login} />\n      <NestedRoute path=\"/\" component={Dashboard}>\n        <PrivateRoute exact path=\"/transacoes\" component={Transactions} />\n        <PrivateRoute exact path=\"/contas\" component={Accounts} />\n        <PrivateRoute exact path=\"/\" component={Home} />\n      </NestedRoute>\n      <Route path=\"*\" component={() => <Redirect to=\"/\" />} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'antd/dist/antd.css';\n\nconst globalStyle = createGlobalStyle`\n    * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n  body {\n    text-rendering: optimizeLegibility !important;\n    -webkit-font-smoothing: antialiased !important;\n    font-family: sans-serif;\n  }\n  button{\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n  }\n`;\nexport default globalStyle;\n","import { combineReducers } from 'redux';\nimport transactionsReducer from './transactionsReducer';\nimport categoriesReducer from './categoriesReducer';\nimport accountsReducer from './accountsReducer';\nimport modalTransactionReducer from './modalTransactionReducer';\n\nconst reducers = combineReducers({\n  transactionsReducer,\n  modalTransactionReducer,\n  categoriesReducer,\n  accountsReducer,\n});\n\nexport default reducers;\n","import axios from 'axios';\n\nconst http = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  timeout: 3001,\n});\n\nexport default http;\n","import { call, put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport http from '../../services/http';\nimport { Creators as TransactionsCreators } from '../ducks/transactionsReducer';\nimport { Creators as ModalTrasactionCreators } from '../ducks/modalTransactionReducer';\n\nexport function* getTransactions() {\n  try {\n    const { data } = yield call(http.get, '/transactions');\n    yield put(TransactionsCreators.getSuccessTransactions(data));\n  } catch (error) {\n    yield put(TransactionsCreators.getFailureTransaction(error));\n  }\n}\n\nexport function* postTransaction(action) {\n  try {\n    yield call(http.post, '/transactions', action.payload);\n    yield put(ModalTrasactionCreators.closeModal());\n    yield put(TransactionsCreators.getTransactions());\n    yield put(TransactionsCreators.postSuccessTransaction());\n    toast.success('Transação criada com sucesso!');\n  } catch (error) {\n    yield put(TransactionsCreators.postFailureTransaction(error));\n  }\n}\n","import { call, put } from 'redux-saga/effects';\nimport http from '../../services/http';\nimport { Creators } from '../ducks/accountsReducer';\n\nexport default function* getAccounts() {\n  try {\n    const { data } = yield call(http.get, '/accounts');\n    yield put(Creators.getSuccessAccounts(data));\n  } catch (error) {\n    yield put(Creators.getFailureAccounts(error));\n  }\n}\n","import { call, put } from 'redux-saga/effects';\nimport http from '../../services/http';\nimport { Creators } from '../ducks/categoriesReducer';\n\nexport default function* getCategories() {\n  try {\n    const { data } = yield call(http.get, '/categories');\n    yield put(Creators.getSuccessCategories(data));\n  } catch (error) {\n    yield put(Creators.getSuccessCategories(error));\n  }\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { getTransactions, postTransaction } from './transactionSaga';\nimport accountSaga from './accountSaga';\nimport categorySaga from './categorySaga';\nimport { Types as TransactionsType } from '../ducks/transactionsReducer';\nimport { Types as CategoriesType } from '../ducks/categoriesReducer';\nimport { Types as AccountsType } from '../ducks/accountsReducer';\n\nexport default function* rootSaga() {\n  yield all([\n    takeLatest(TransactionsType.GET_TRANSACTIONS, getTransactions),\n    takeLatest(TransactionsType.POST_TRANSACTION, postTransaction),\n    takeLatest(CategoriesType.GET_CATEGORIES, categorySaga),\n    takeLatest(AccountsType.GET_ACCOUNTS, accountSaga),\n  ]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './ducks';\nimport sagas from './sagas';\n\nconst middlewares = [];\n\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\n\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n\nmiddlewares.push(sagaMiddleware);\n\nconst composer = process.env.NODE_ENV === 'development'\n  ? compose(\n    applyMiddleware(...middlewares),\n    console.tron.createEnhancer(),\n  )\n  : compose(applyMiddleware(...middlewares));\n\nconst store = createStore(reducers, composer);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\nimport store from './store';\n\nconst App = () => (\n  <Provider store={store}>\n    <GlobalStyles />\n    <Routes />\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './config/reactotron';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","const INITIAL_STATE = {\n  data: [],\n  loading: false,\n  error: null,\n  errorPostTransaction: null,\n  loadingTransaction: false,\n};\n\nexport const Types = {\n  GET_TRANSACTIONS: 'GET_TRANSACTIONS_SERVICE',\n  GET_SUCCESS_TRANSACTIONS: 'GET_TRANSACTIONS_SUCCESS_SERVICE',\n  GET_FAILURE_TRANSACTIONS: 'GET_TRANSACTIONS_FAILURE_SERVICE',\n  POST_TRANSACTION: 'POST_TRANSACTION_SERVICE',\n  POST_FAILURE_TRANSACTION: 'POST_TRANSACTION_FAILURE_SERVICE',\n  POST_SUCCESS_TRANSACTION: 'POST_TRANSACTION_SUCCESS_SERVICE',\n};\n\nconst transactionsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Types.GET_TRANSACTIONS: {\n      return { ...state, loading: true, error: null };\n    }\n    case Types.GET_SUCCESS_TRANSACTIONS: {\n      return { ...state, data: action.payload, loading: true };\n    }\n    case Types.GET_FAILURE_TRANSACTIONS: {\n      return { ...state, error: action.payload, loading: false };\n    }\n    case Types.POST_TRANSACTION: {\n      return { ...state, loadingTransaction: true };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const Creators = {\n  getTransactions: () => ({\n    type: Types.GET_TRANSACTIONS,\n  }),\n  getSuccessTransactions: transactions => ({\n    type: Types.GET_SUCCESS_TRANSACTIONS,\n    payload: transactions,\n  }),\n  getFailureTransaction: errorMessage => ({\n    type: Types.GET_FAILURE_TRANSACTIONS,\n    payload: errorMessage,\n  }),\n  postTransaction: transaction => ({\n    type: Types.POST_TRANSACTION,\n    payload: transaction,\n  }),\n  postSuccessTransaction: () => ({\n    type: Types.POST_SUCCESS_TRANSACTION,\n  }),\n  postFailureTransaction: error => ({\n    type: Types.POST_TRANSACTION_FAILURE,\n    payload: error,\n  }),\n};\n\nexport default transactionsReducer;\n","const INITIAL_STATE = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nexport const Types = {\n  GET_CATEGORIES: 'CATEGORIES_SERVICE_GET',\n  GET_SUCCESS_GET_CATEGORIES: 'GET_CATEGORIES_SUCCESS_SERVICE',\n  GET_FAILURE_GET_CATEGORIES: 'GET_CATEGORIES_FAILURE_SERVICE',\n};\n\nconst CategoriesReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Types.GET_CATEGORIES: {\n      return { ...state, loading: true, error: null };\n    }\n    case Types.GET_SUCCESS_GET_CATEGORIES: {\n      return { ...state, data: action.payload, loading: true };\n    }\n    case Types.GET_FAILURE_GET_CATEGORIES: {\n      return { ...state, error: action.payload, loading: false };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const Creators = {\n  getCategories: () => ({\n    type: Types.GET_CATEGORIES,\n  }),\n  getSuccessCategories: CATEGORIES => ({\n    type: Types.GET_SUCCESS_GET_CATEGORIES,\n    payload: CATEGORIES,\n  }),\n  getFailureCategories: errorMessage => ({\n    type: Types.GET_FAILURE_GET_CATEGORIES,\n    payload: errorMessage,\n  }),\n};\n\nexport default CategoriesReducer;\n","const INITIAL_STATE = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nexport const Types = {\n  GET_ACCOUNTS: 'ACCOUNTS_SERVICE_GET',\n  GET_SUCCESS_GET_ACCOUNTS: 'GET_ACCOUNTS_SUCCESS_SERVICE',\n  GET_FAILURE_GET_ACCOUNTS: 'GET_ACCOUNTS_FAILURE_SERVICE',\n};\n\nconst AccountsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Types.GET_ACCOUNTS: {\n      return { ...state, loading: true, error: null };\n    }\n    case Types.GET_SUCCESS_GET_ACCOUNTS: {\n      return { ...state, data: action.payload, loading: true };\n    }\n    case Types.GET_FAILURE_GET_ACCOUNTS: {\n      return { ...state, error: action.payload, loading: false };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const Creators = {\n  getAccounts: () => ({\n    type: Types.GET_ACCOUNTS,\n  }),\n  getSuccessAccounts: accounts => ({\n    type: Types.GET_SUCCESS_GET_ACCOUNTS,\n    payload: accounts,\n  }),\n  getFailureAccounts: errorMessage => ({\n    type: Types.GET_FAILURE_GET_ACCOUNTS,\n    payload: errorMessage,\n  }),\n};\n\nexport default AccountsReducer;\n","const INITIAL_STATE = {\n  visable: false,\n  transactionType: '',\n};\n\nexport const Types = {\n  OPEN: 'modal/OPEN',\n  CLOSE: 'modal/CLOSE',\n};\n\nexport const ModalTransactionTypes = {\n  RECIPE: 'TRANSACTION_RECIPE',\n  EXPENSE: 'TRANSACTION_EXPENSE',\n};\n\nconst modalTransactionReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Types.OPEN: {\n      return { ...state, ...action.payload };\n    }\n    case Types.CLOSE: {\n      return { ...state, visable: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const Creators = {\n  openModal: transactionType => ({\n    type: Types.OPEN,\n    payload: {\n      visable: true,\n      transactionType,\n    },\n  }),\n  closeModal: () => ({\n    type: Types.CLOSE,\n    payload: false,\n  }),\n};\n\nexport default modalTransactionReducer;\n"],"sourceRoot":""}